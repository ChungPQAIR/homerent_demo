import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.gray10001,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: appTheme.lightBlue400,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(10.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      floatingActionButtonTheme: FloatingActionButtonThemeData(
        backgroundColor: appTheme.lightBlue400,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.gray90001,
          fontSize: 16.fSize,
          fontFamily: 'Nunito Sans',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.gray90001,
          fontSize: 14.fSize,
          fontFamily: 'Nunito Sans',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.gray90001,
          fontSize: 12.fSize,
          fontFamily: 'Nunito Sans',
          fontWeight: FontWeight.w400,
        ),
        titleLarge: TextStyle(
          color: appTheme.black900,
          fontSize: 20.fSize,
          fontFamily: 'Nunito Sans',
          fontWeight: FontWeight.w700,
        ),
        titleMedium: TextStyle(
          color: appTheme.blueGray800,
          fontSize: 16.fSize,
          fontFamily: 'Nunito Sans',
          fontWeight: FontWeight.w700,
        ),
        titleSmall: TextStyle(
          color: appTheme.gray90001,
          fontSize: 14.fSize,
          fontFamily: 'Nunito Sans',
          fontWeight: FontWeight.w700,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light();
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Black
  Color get black900 => Color(0XFF000000);

  // Blue
  Color get blue200 => Color(0XFF9BCCE5);

  // BlueGray
  Color get blueGray100 => Color(0XFFD5D8E6);
  Color get blueGray10001 => Color(0XFFD1D3D4);
  Color get blueGray200 => Color(0XFFB5C2CE);
  Color get blueGray50 => Color(0XFFF1F2F2);
  Color get blueGray700 => Color(0XFF515150);
  Color get blueGray70001 => Color(0XFF4F5051);
  Color get blueGray800 => Color(0XFF21456D);

  // DeepOrange
  Color get deepOrangeA700 => Color(0XFFE73007);

  // Gray
  Color get gray100 => Color(0XFFF0F3F8);
  Color get gray10001 => Color(0XFFF4F4F4);
  Color get gray200 => Color(0XFFE6E7E8);
  Color get gray300 => Color(0XFFD7E4E8);
  Color get gray400 => Color(0XFFBCBEC0);
  Color get gray40001 => Color(0XFFC0C7CE);
  Color get gray40002 => Color(0XFFD0C1A7);
  Color get gray40003 => Color(0XFFC2B59B);
  Color get gray500 => Color(0XFF939598);
  Color get gray50001 => Color(0XFFBFAC85);
  Color get gray50002 => Color(0XFFA7A9AC);
  Color get gray50003 => Color(0XFFAA9976);
  Color get gray600 => Color(0XFF7E8083);
  Color get gray60001 => Color(0XFF808285);
  Color get gray60002 => Color(0XFF7E7F82);
  Color get gray60003 => Color(0XFF727376);
  Color get gray60004 => Color(0XFF6D6E71);
  Color get gray700 => Color(0XFF58595B);
  Color get gray70001 => Color(0XFF7A643F);
  Color get gray800 => Color(0XFF443029);
  Color get gray80001 => Color(0XFF704738);
  Color get gray900 => Color(0XFF24262B);
  Color get gray90001 => Color(0XFF1E1E1E);

  // Green
  Color get green400 => Color(0XFF59B179);
  Color get green500 => Color(0XFF47B649);

  // Indigo
  Color get indigo100 => Color(0XFFBBC2DA);
  Color get indigo10001 => Color(0XFFC3D5E9);
  Color get indigo500 => Color(0XFF3774B7);
  Color get indigo800 => Color(0XFF264E7A);
  Color get indigo900 => Color(0XFF133B6B);

  // LightBlue
  Color get lightBlue400 => Color(0XFF27AAE1);

  // LightGreen
  Color get lightGreen100 => Color(0XFFE4DBCC);
  Color get lightGreen10001 => Color(0XFFE3DBCA);

  // Lime
  Color get lime800 => Color(0XFFA58855);
  Color get lime900 => Color(0XFFA16845);

  // Orange
  Color get orange200 => Color(0XFFF6CA88);
  Color get orange500 => Color(0XFFFF9500);
  Color get orangeA200 => Color(0XFFE3A546);

  // Red
  Color get red300 => Color(0XFFC78D69);

  // Teal
  Color get teal100 => Color(0XFFB5D4DE);
  Color get teal200 => Color(0XFF88C2DB);
  Color get teal20001 => Color(0XFF8DBBD3);
  Color get teal300 => Color(0XFF5F9AB4);
  Color get teal50 => Color(0XFFD4EEF9);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
